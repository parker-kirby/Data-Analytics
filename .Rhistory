OTP_rates$`2021 Rate` <- ((OTP_retention_2021/OTP_members_2020) * 100)
View(OTP_rates)
######################################################
#Direct Rate
Direct_members_2016 <- sum(Total_yearly$`2016` == 1)
Direct_members_2017 <- sum(Total_yearly$`2017` == 1)
Direct_members_2018 <- sum(Total_yearly$`2018` == 1)
Direct_members_2019 <- sum(Total_yearly$`2019` == 1)
Direct_members_2020 <- sum(Total_yearly$`2020` == 1)
Direct_members_2021 <- sum(Total_yearly$`2021` == 1)
Direct_retention_2017 <- sum(Total_yearly$`2016` == 1 & Total_yearly$`2017` > 0)
Direct_retention_2018 <- sum(Total_yearly$`2017` == 1 & Total_yearly$`2018` > 0)
Direct_retention_2019 <- sum(Total_yearly$`2018` == 1 & Total_yearly$`2019` > 0)
Direct_retention_2020 <- sum(Total_yearly$`2019` == 1 & Total_yearly$`2020` > 0)
Direct_retention_2021 <- sum(Total_yearly$`2020` == 1 & Total_yearly$`2021` > 0)
Direct_rates <- as.data.table(((Direct_retention_2017/Direct_members_2016) * 100))
colnames(Direct_rates) <- "2017 Rate"
Direct_rates$`2018 Rate` <- ((Direct_retention_2018/Direct_members_2017) * 100)
Direct_rates$`2019 Rate` <- ((Direct_retention_2019/Direct_members_2018) * 100)
Direct_rates$`2020 Rate` <- ((Direct_retention_2020/Direct_members_2019) * 100)
Direct_rates$`2021 Rate` <- ((Direct_retention_2021/Direct_members_2020) * 100)
View(Direct_rates)
######################################################
#Comp Rate
Comp_members_2016 <- sum(Total_yearly$`2016` == 2)
Comp_members_2017 <- sum(Total_yearly$`2017` == 2)
Comp_members_2018 <- sum(Total_yearly$`2018` == 2)
Comp_members_2019 <- sum(Total_yearly$`2019` == 2)
Comp_members_2020 <- sum(Total_yearly$`2020` == 2)
Comp_members_2021 <- sum(Total_yearly$`2021` == 2)
Comp_retention_2017 <- sum(Total_yearly$`2016` == 2 & Total_yearly$`2017` > 0)
Comp_retention_2018 <- sum(Total_yearly$`2017` == 2 & Total_yearly$`2018` > 0)
Comp_retention_2019 <- sum(Total_yearly$`2018` == 2 & Total_yearly$`2019` > 0)
Comp_retention_2020 <- sum(Total_yearly$`2019` == 2 & Total_yearly$`2020` > 0)
Comp_retention_2021 <- sum(Total_yearly$`2020` == 2 & Total_yearly$`2021` > 0)
Comp_rates <- as.data.table(((Comp_retention_2017/Comp_members_2016) * 100))
colnames(Comp_rates) <- "2017 Rate"
Comp_rates$`2018 Rate` <- ((Comp_retention_2018/Comp_members_2017) * 100)
Comp_rates$`2019 Rate` <- ((Comp_retention_2019/Comp_members_2018) * 100)
Comp_rates$`2020 Rate` <- ((Comp_retention_2020/Comp_members_2019) * 100)
Comp_rates$`2021 Rate` <- ((Comp_retention_2021/Comp_members_2020) * 100)
View(Comp_rates)
######################################################
#Comp Rate
Comp_members_2016 <- sum(Total_yearly$`2016` == 3)
Comp_members_2017 <- sum(Total_yearly$`2017` == 3)
Comp_members_2018 <- sum(Total_yearly$`2018` == 3)
Comp_members_2019 <- sum(Total_yearly$`2019` == 3)
Comp_members_2020 <- sum(Total_yearly$`2020` == 3)
Comp_members_2021 <- sum(Total_yearly$`2021` == 3)
Comp_retention_2017 <- sum(Total_yearly$`2016` == 3 & Total_yearly$`2017` > 0)
Comp_retention_2018 <- sum(Total_yearly$`2017` == 3 & Total_yearly$`2018` > 0)
Comp_retention_2019 <- sum(Total_yearly$`2018` == 3 & Total_yearly$`2019` > 0)
Comp_retention_2020 <- sum(Total_yearly$`2019` == 3 & Total_yearly$`2020` > 0)
Comp_retention_2021 <- sum(Total_yearly$`2020` == 3 & Total_yearly$`2021` > 0)
Comp_rates <- as.data.table(((Comp_retention_2017/Comp_members_2016) * 100))
colnames(Comp_rates) <- "2017 Rate"
Comp_rates$`2018 Rate` <- ((Comp_retention_2018/Comp_members_2017) * 100)
Comp_rates$`2019 Rate` <- ((Comp_retention_2019/Comp_members_2018) * 100)
Comp_rates$`2020 Rate` <- ((Comp_retention_2020/Comp_members_2019) * 100)
Comp_rates$`2021 Rate` <- ((Comp_retention_2021/Comp_members_2020) * 100)
View(Comp_rates)
data_4 <- data[data$`Unique ID` == "344274"]
View(data_4)
library(data.table)
library(dplyr)
library(carat)
#read in our data
data <- fread('./UNH_Membership_Project/project/volume/data/raw/raw_data.csv')
data_4 <- data[data$`Unique ID` == "305058"]
View(data_4)
#removing columns that aren't important
remove <- c("OTP", "Designation", "Default Country", "Product: Short Name", "Account Safe Id",
"Account Safe Id-1", "Account Record Type-1", "Member-1", "Member Type-1", "Status",
"Person Account: Lead Source", "Certified", "Member", "Product: Category")
data <- data[, remove:=NULL, with=FALSE]
data_4 <- data[data$`Unique ID` == "305058"]
data_4 <- data[data$`Unique ID` == "344274"]
View(data_4)
data_4 <- data[data$`Unique ID` == "305058"]
View(data_4)
data_4 <- data[data$`Unique ID` == "344274"]
View(data)
#Converting date formats and specifying our date range
data$`Created Date`<- as.Date(data$`Created Date`, "%m/%d/%Y")
data$`Transaction Date` <- as.Date(data$`Transaction Date`, "%m/%d/%Y")
data <- data[data$`Transaction Date` < as.Date('2022-01-01')]
data_4 <- data[data$`Unique ID` == "344274"]
View(data_4)
data_4 <- data[data$`Unique ID` == "1292573"]
View(data_4)
data_4 <- data[data$`Unique ID` == "320160"]
View(data_4)
library(data.table)
library(dplyr)
library(carat)
#read in our data
data <- fread('./UNH_Membership_Project/project/volume/data/raw/raw_data.csv')
#removing records that won't be used for analysis
data <- distinct(data)
data <- data[data$`Account Record Type` == "Individual"]
data <- data[data$`Membership Category` == "Individual"]
data <- data[data$Status == "Active"]
data <- data[data$`Member Type` != "Individual Green Membership"]
data <- data[data$`Member Type` != "Press"]
data <- data[data$`Product: Record Type` != "Donation"]
data <- data[data$`Product: Record Type` != "Coupon"]
data <- data[!(data$`Product: Category` == "Book" & data$`Unit Price` == 0)]
data <- data[!(data$`Product: Category` == "ebook" & data$`Unit Price` == 0)]
#Converting date formats and specifying our date range
data$`Created Date`<- as.Date(data$`Created Date`, "%m/%d/%Y")
data$`Transaction Date` <- as.Date(data$`Transaction Date`, "%m/%d/%Y")
data <- data[data$`Transaction Date` < as.Date('2022-01-01')]
data_4 <- data[data$`Unique ID` == "320160"]
#writing out our cleaned data
fwrite(data, './UNH_Membership_Project/project/volume/data/interim/cleaned_data.csv')
View(data_4)
#removing columns that aren't important
remove <- c("OTP", "Designation", "Default Country", "Product: Short Name", "Account Safe Id",
"Account Safe Id-1", "Account Record Type-1", "Member-1", "Member Type-1", "Status",
"Person Account: Lead Source", "Certified", "Member", "Product: Category")
data <- data[, remove:=NULL, with=FALSE]
data <- data[, remove:=NULL, with=FALSE]
#writing out our cleaned data
fwrite(data, './UNH_Membership_Project/project/volume/data/interim/cleaned_data.csv')
library(data.table)
library(dplyr)
library(carat)
#read in our data
data <- fread('./UNH_Membership_Project/project/volume/data/raw/raw_data.csv')
#removing records that won't be used for analysis
data <- distinct(data)
data <- data[data$`Account Record Type` == "Individual"]
data <- data[data$`Membership Category` == "Individual"]
data <- data[data$Status == "Active"]
data <- data[data$`Member Type` != "Individual Green Membership"]
data <- data[data$`Member Type` != "Press"]
data <- data[data$`Product: Record Type` != "Donation"]
data <- data[data$`Product: Record Type` != "Coupon"]
data <- data[!(data$`Product: Category` == "Book" & data$`Unit Price` == 0)]
data <- data[!(data$`Product: Category` == "ebook" & data$`Unit Price` == 0)]
#Converting date formats and specifying our date range
data$`Created Date`<- as.Date(data$`Created Date`, "%m/%d/%Y")
data$`Transaction Date` <- as.Date(data$`Transaction Date`, "%m/%d/%Y")
data <- data[data$`Transaction Date` < as.Date('2022-01-01')]
#removing columns that aren't important
remove <- c("OTP", "Designation", "Default Country", "Product: Short Name", "Account Safe Id",
"Account Safe Id-1", "Account Record Type-1", "Member-1", "Member Type-1", "Status",
"Person Account: Lead Source", "Certified", "Member", "Product: Category")
data <- data[, remove:=NULL, with=FALSE]
#writing out our cleaned data
fwrite(data, './UNH_Membership_Project/project/volume/data/interim/cleaned_data.csv')
data <- fread('./UNH_Membership_Project/project/volume/data/intrim/cleaned_data.csv')
membership_list = c("Professional", "Not-For-Profit", "Government", "Higher Education", "Retired", "Transitional", "Student")
##########################################################################################################
#Direct membership
data_list <- data[(duplicated(data$`Order Id`) | duplicated(data$`Order Id`, fromLast = TRUE)) & data$`Unit Price` == 0]
#data$direct[data$`Product: Product Name` %in% direct_list & data$`Unit Price` > 0 & data$`Total Payment` >= data$`Unit Price`] <- 1
direct <- data[data$`Product: Product Name` %in% membership_list & data$`Unit Price` > 0 & data$`Total Payment` >= data$`Unit Price`]
#Get rid of records in data list
non_use = c(data_list$`Order Id`)
'%notin%' <- Negate('%in%')
Final_Direct <- direct[direct$`Order Id` %notin% non_use]
Final_Direct <- Final_Direct[!(duplicated(Final_Direct$`Order Id`))]
OTP_indirect <- data[(duplicated(data$`Order Id`) | duplicated(data$`Order Id`, fromLast = TRUE)) & data$`Unit Price` == 0 & data$`Total Payment` == 0]
Final_OTP <- OTP_indirect[OTP_indirect$`Product: Product Name` %in% membership_list]
#########################################################################################################
#Indirect Comp
comped1 <- data[data$`Product: Product Name` %in% membership_list & data$`Unit Price` > 0 & data$`Total Payment` == 0]
comped2 <- data[data$`Product: Product Name` %in% membership_list & data$`Unit Price` == 0 & data$`Total Payment` == 0 & !(duplicated(data$`Order Id`) | duplicated(data$`Order Id`, fromLast = TRUE))]
Final_Comp<- rbind(comped1, comped2)
bundle1 <- data[data$`Product: Product Name` %in% membership_list & (duplicated(data$`Order Id`) | duplicated(data$`Order Id`, fromLast = TRUE)) & data$`Unit Price` == 0 & data$`Total Payment` > 0]
bundle2 <- data[data$`Product: Product Name` %in% membership_list & (duplicated(data$`Order Id`) | duplicated(data$`Order Id`, fromLast = TRUE)) & data$`Unit Price`> 0 & data$`Total Payment`> 0 & data$`Unit Price` <= data$`Total Payment`]
bundle2 <- bundle2[bundle2$`Order Id` %in% non_use]
Final_Bundle <- rbind(bundle1, bundle2)
Final_Bundle <- Final_Bundle[(!(duplicated(Final_Bundle$`Order Id`)))]
lemme_see <- Final_Comp[Final_Comp$`Unique ID` == "320160"]
View(lemme_see)
lemme_see <- Final_Comp[Final_Comp$`Unique ID` == "283724"]
View(lemme_see)
######################################################
#Bundle Rate
Bundle_members_2016 <- sum(Total_yearly$`2016` == 4)
Bundle_members_2017 <- sum(Total_yearly$`2017` == 4)
Bundle_members_2018 <- sum(Total_yearly$`2018` == 4)
Bundle_members_2019 <- sum(Total_yearly$`2019` == 4)
Bundle_members_2020 <- sum(Total_yearly$`2020` == 4)
Bundle_members_2021 <- sum(Total_yearly$`2021` == 4)
Bundle_retention_2017 <- sum(Total_yearly$`2016` == 4 & Total_yearly$`2017` > 0)
Bundle_retention_2018 <- sum(Total_yearly$`2017` == 4 & Total_yearly$`2018` > 0)
Bundle_retention_2019 <- sum(Total_yearly$`2018` == 4 & Total_yearly$`2019` > 0)
Bundle_retention_2020 <- sum(Total_yearly$`2019` == 4 & Total_yearly$`2020` > 0)
Bundle_retention_2021 <- sum(Total_yearly$`2020` == 4 & Total_yearly$`2021` > 0)
Bundle_rates <- as.data.table(((Bundle_retention_2017/Bundle_members_2016) * 100))
colnames(Comp_rates) <- "2017 Rate"
Bundle_rates$`2018 Rate` <- ((Bundle_retention_2018/Bundle_members_2017) * 100)
Bundle_rates$`2019 Rate` <- ((Bundle_retention_2019/Bundle_members_2018) * 100)
Bundle_rates$`2020 Rate` <- ((Bundle_retention_2020/Bundle_members_2019) * 100)
Bundle_rates$`2021 Rate` <- ((Bundle_retention_2021/Bundle_members_2020) * 100)
View(Bundle_rates)
Total_yearly <- fread('./UNH_Membership_Project/project/volume/data/processed/Total_yearly.csv')
######################################################
#General Rate
general_members_2016 <- sum(Total_yearly$`2016` > 0)
general_members_2017 <- sum(Total_yearly$`2017` > 0)
general_members_2018 <- sum(Total_yearly$`2018` > 0)
general_members_2019 <- sum(Total_yearly$`2019` > 0)
general_members_2020 <- sum(Total_yearly$`2020` > 0)
general_members_2021 <- sum(Total_yearly$`2021` > 0)
general_retention_2017 <- sum(Total_yearly$`2016` > 0 & Total_yearly$`2017` > 0)
general_retention_2018 <- sum(Total_yearly$`2017` > 0 & Total_yearly$`2018` > 0)
general_retention_2019 <- sum(Total_yearly$`2018` > 0 & Total_yearly$`2019` > 0)
general_retention_2020 <- sum(Total_yearly$`2019` > 0 & Total_yearly$`2020` > 0)
general_retention_2021 <- sum(Total_yearly$`2020` > 0 & Total_yearly$`2021` > 0)
general_rates <- as.data.table(((general_retention_2017/members_2016) * 100))
colnames(rates) <- "2017 Rate"
general_rates$`2018 Rate` <- ((general_retention_2018/members_2017) * 100)
general_rates$`2019 Rate` <- ((general_retention_2019/members_2018) * 100)
general_rates$`2020 Rate` <- ((general_retention_2020/members_2019) * 100)
general_rates$`2021 Rate` <- ((general_retention_2021/members_2020) * 100)
######################################################
#Direct Rate
Direct_members_2016 <- sum(Total_yearly$`2016` == 1)
Direct_members_2017 <- sum(Total_yearly$`2017` == 1)
Direct_members_2018 <- sum(Total_yearly$`2018` == 1)
Direct_members_2019 <- sum(Total_yearly$`2019` == 1)
Direct_members_2020 <- sum(Total_yearly$`2020` == 1)
Direct_members_2021 <- sum(Total_yearly$`2021` == 1)
Direct_retention_2017 <- sum(Total_yearly$`2016` == 1 & Total_yearly$`2017` > 0)
Direct_retention_2018 <- sum(Total_yearly$`2017` == 1 & Total_yearly$`2018` > 0)
Direct_retention_2019 <- sum(Total_yearly$`2018` == 1 & Total_yearly$`2019` > 0)
Direct_retention_2020 <- sum(Total_yearly$`2019` == 1 & Total_yearly$`2020` > 0)
Direct_retention_2021 <- sum(Total_yearly$`2020` == 1 & Total_yearly$`2021` > 0)
Direct_rates <- as.data.table(((Direct_retention_2017/Direct_members_2016) * 100))
colnames(Direct_rates) <- "2017 Rate"
Direct_rates$`2018 Rate` <- ((Direct_retention_2018/Direct_members_2017) * 100)
Direct_rates$`2019 Rate` <- ((Direct_retention_2019/Direct_members_2018) * 100)
Direct_rates$`2020 Rate` <- ((Direct_retention_2020/Direct_members_2019) * 100)
Direct_rates$`2021 Rate` <- ((Direct_retention_2021/Direct_members_2020) * 100)
######################################################
#OTP Rate
OTP_members_2016 <- sum(Total_yearly$`2016` == 2)
OTP_members_2017 <- sum(Total_yearly$`2017` == 2)
OTP_members_2018 <- sum(Total_yearly$`2018` == 2)
OTP_members_2019 <- sum(Total_yearly$`2019` == 2)
OTP_members_2020 <- sum(Total_yearly$`2020` == 2)
OTP_members_2021 <- sum(Total_yearly$`2021` == 2)
OTP_retention_2017 <- sum(Total_yearly$`2016` == 2 & Total_yearly$`2017` > 0)
OTP_retention_2018 <- sum(Total_yearly$`2017` == 2 & Total_yearly$`2018` > 0)
OTP_retention_2019 <- sum(Total_yearly$`2018` == 2 & Total_yearly$`2019` > 0)
OTP_retention_2020 <- sum(Total_yearly$`2019` == 2 & Total_yearly$`2020` > 0)
OTP_retention_2021 <- sum(Total_yearly$`2020` == 2 & Total_yearly$`2021` > 0)
OTP_rates <- as.data.table(((OTP_retention_2017/OTP_members_2016) * 100))
colnames(OTP_rates) <- "2017 Rate"
OTP_rates$`2018 Rate` <- ((OTP_retention_2018/OTP_members_2017) * 100)
OTP_rates$`2019 Rate` <- ((OTP_retention_2019/OTP_members_2018) * 100)
OTP_rates$`2020 Rate` <- ((OTP_retention_2020/OTP_members_2019) * 100)
OTP_rates$`2021 Rate` <- ((OTP_retention_2021/OTP_members_2020) * 100)
######################################################
#Comp Rate
Comp_members_2016 <- sum(Total_yearly$`2016` == 3)
Comp_members_2017 <- sum(Total_yearly$`2017` == 3)
Comp_members_2018 <- sum(Total_yearly$`2018` == 3)
Comp_members_2019 <- sum(Total_yearly$`2019` == 3)
Comp_members_2020 <- sum(Total_yearly$`2020` == 3)
Comp_members_2021 <- sum(Total_yearly$`2021` == 3)
Comp_retention_2017 <- sum(Total_yearly$`2016` == 3 & Total_yearly$`2017` > 0)
Comp_retention_2018 <- sum(Total_yearly$`2017` == 3 & Total_yearly$`2018` > 0)
Comp_retention_2019 <- sum(Total_yearly$`2018` == 3 & Total_yearly$`2019` > 0)
Comp_retention_2020 <- sum(Total_yearly$`2019` == 3 & Total_yearly$`2020` > 0)
Comp_retention_2021 <- sum(Total_yearly$`2020` == 3 & Total_yearly$`2021` > 0)
Comp_rates <- as.data.table(((Comp_retention_2017/Comp_members_2016) * 100))
colnames(Comp_rates) <- "2017 Rate"
Comp_rates$`2018 Rate` <- ((Comp_retention_2018/Comp_members_2017) * 100)
Comp_rates$`2019 Rate` <- ((Comp_retention_2019/Comp_members_2018) * 100)
Comp_rates$`2020 Rate` <- ((Comp_retention_2020/Comp_members_2019) * 100)
Comp_rates$`2021 Rate` <- ((Comp_retention_2021/Comp_members_2020) * 100)
######################################################
#Bundle Rate
Bundle_members_2016 <- sum(Total_yearly$`2016` == 4)
Bundle_members_2017 <- sum(Total_yearly$`2017` == 4)
Bundle_members_2018 <- sum(Total_yearly$`2018` == 4)
Bundle_members_2019 <- sum(Total_yearly$`2019` == 4)
Bundle_members_2020 <- sum(Total_yearly$`2020` == 4)
Bundle_members_2021 <- sum(Total_yearly$`2021` == 4)
Bundle_retention_2017 <- sum(Total_yearly$`2016` == 4 & Total_yearly$`2017` > 0)
Bundle_retention_2018 <- sum(Total_yearly$`2017` == 4 & Total_yearly$`2018` > 0)
Bundle_retention_2019 <- sum(Total_yearly$`2018` == 4 & Total_yearly$`2019` > 0)
Bundle_retention_2020 <- sum(Total_yearly$`2019` == 4 & Total_yearly$`2020` > 0)
Bundle_retention_2021 <- sum(Total_yearly$`2020` == 4 & Total_yearly$`2021` > 0)
Bundle_rates <- as.data.table(((Bundle_retention_2017/Bundle_members_2016) * 100))
colnames(Bundle_rates) <- "2017 Rate"
Bundle_rates$`2018 Rate` <- ((Bundle_retention_2018/Bundle_members_2017) * 100)
Bundle_rates$`2019 Rate` <- ((Bundle_retention_2019/Bundle_members_2018) * 100)
Bundle_rates$`2020 Rate` <- ((Bundle_retention_2020/Bundle_members_2019) * 100)
Bundle_rates$`2021 Rate` <- ((Bundle_retention_2021/Bundle_members_2020) * 100)
rates <- bind_rows(general_rates, Direct_rates, OTP_rates, Comp_rates, Bundle_rates)
View(rates)
Total_yearly <- fread('./UNH_Membership_Project/project/volume/data/processed/Total_yearly.csv')
######################################################
#General Rate
general_members_2016 <- sum(Total_yearly$`2016` > 0)
general_members_2017 <- sum(Total_yearly$`2017` > 0)
general_members_2018 <- sum(Total_yearly$`2018` > 0)
general_members_2019 <- sum(Total_yearly$`2019` > 0)
general_members_2020 <- sum(Total_yearly$`2020` > 0)
general_members_2021 <- sum(Total_yearly$`2021` > 0)
general_retention_2017 <- sum(Total_yearly$`2016` > 0 & Total_yearly$`2017` > 0)
general_retention_2018 <- sum(Total_yearly$`2017` > 0 & Total_yearly$`2018` > 0)
general_retention_2019 <- sum(Total_yearly$`2018` > 0 & Total_yearly$`2019` > 0)
general_retention_2020 <- sum(Total_yearly$`2019` > 0 & Total_yearly$`2020` > 0)
general_retention_2021 <- sum(Total_yearly$`2020` > 0 & Total_yearly$`2021` > 0)
general_rates <- as.data.table(((general_retention_2017/members_2016) * 100))
colnames(general_rates) <- "2017 Rate"
general_rates$`2018 Rate` <- ((general_retention_2018/members_2017) * 100)
general_rates$`2019 Rate` <- ((general_retention_2019/members_2018) * 100)
general_rates$`2020 Rate` <- ((general_retention_2020/members_2019) * 100)
general_rates$`2021 Rate` <- ((general_retention_2021/members_2020) * 100)
######################################################
#Direct Rate
Direct_members_2016 <- sum(Total_yearly$`2016` == 1)
Direct_members_2017 <- sum(Total_yearly$`2017` == 1)
Direct_members_2018 <- sum(Total_yearly$`2018` == 1)
Direct_members_2019 <- sum(Total_yearly$`2019` == 1)
Direct_members_2020 <- sum(Total_yearly$`2020` == 1)
Direct_members_2021 <- sum(Total_yearly$`2021` == 1)
Direct_retention_2017 <- sum(Total_yearly$`2016` == 1 & Total_yearly$`2017` > 0)
Direct_retention_2018 <- sum(Total_yearly$`2017` == 1 & Total_yearly$`2018` > 0)
Direct_retention_2019 <- sum(Total_yearly$`2018` == 1 & Total_yearly$`2019` > 0)
Direct_retention_2020 <- sum(Total_yearly$`2019` == 1 & Total_yearly$`2020` > 0)
Direct_retention_2021 <- sum(Total_yearly$`2020` == 1 & Total_yearly$`2021` > 0)
Direct_rates <- as.data.table(((Direct_retention_2017/Direct_members_2016) * 100))
colnames(Direct_rates) <- "2017 Rate"
Direct_rates$`2018 Rate` <- ((Direct_retention_2018/Direct_members_2017) * 100)
Direct_rates$`2019 Rate` <- ((Direct_retention_2019/Direct_members_2018) * 100)
Direct_rates$`2020 Rate` <- ((Direct_retention_2020/Direct_members_2019) * 100)
Direct_rates$`2021 Rate` <- ((Direct_retention_2021/Direct_members_2020) * 100)
######################################################
#OTP Rate
OTP_members_2016 <- sum(Total_yearly$`2016` == 2)
OTP_members_2017 <- sum(Total_yearly$`2017` == 2)
OTP_members_2018 <- sum(Total_yearly$`2018` == 2)
OTP_members_2019 <- sum(Total_yearly$`2019` == 2)
OTP_members_2020 <- sum(Total_yearly$`2020` == 2)
OTP_members_2021 <- sum(Total_yearly$`2021` == 2)
OTP_retention_2017 <- sum(Total_yearly$`2016` == 2 & Total_yearly$`2017` > 0)
OTP_retention_2018 <- sum(Total_yearly$`2017` == 2 & Total_yearly$`2018` > 0)
OTP_retention_2019 <- sum(Total_yearly$`2018` == 2 & Total_yearly$`2019` > 0)
OTP_retention_2020 <- sum(Total_yearly$`2019` == 2 & Total_yearly$`2020` > 0)
OTP_retention_2021 <- sum(Total_yearly$`2020` == 2 & Total_yearly$`2021` > 0)
OTP_rates <- as.data.table(((OTP_retention_2017/OTP_members_2016) * 100))
colnames(OTP_rates) <- "2017 Rate"
OTP_rates$`2018 Rate` <- ((OTP_retention_2018/OTP_members_2017) * 100)
OTP_rates$`2019 Rate` <- ((OTP_retention_2019/OTP_members_2018) * 100)
OTP_rates$`2020 Rate` <- ((OTP_retention_2020/OTP_members_2019) * 100)
OTP_rates$`2021 Rate` <- ((OTP_retention_2021/OTP_members_2020) * 100)
######################################################
#Comp Rate
Comp_members_2016 <- sum(Total_yearly$`2016` == 3)
Comp_members_2017 <- sum(Total_yearly$`2017` == 3)
Comp_members_2018 <- sum(Total_yearly$`2018` == 3)
Comp_members_2019 <- sum(Total_yearly$`2019` == 3)
Comp_members_2020 <- sum(Total_yearly$`2020` == 3)
Comp_members_2021 <- sum(Total_yearly$`2021` == 3)
Comp_retention_2017 <- sum(Total_yearly$`2016` == 3 & Total_yearly$`2017` > 0)
Comp_retention_2018 <- sum(Total_yearly$`2017` == 3 & Total_yearly$`2018` > 0)
Comp_retention_2019 <- sum(Total_yearly$`2018` == 3 & Total_yearly$`2019` > 0)
Comp_retention_2020 <- sum(Total_yearly$`2019` == 3 & Total_yearly$`2020` > 0)
Comp_retention_2021 <- sum(Total_yearly$`2020` == 3 & Total_yearly$`2021` > 0)
Comp_rates <- as.data.table(((Comp_retention_2017/Comp_members_2016) * 100))
colnames(Comp_rates) <- "2017 Rate"
Comp_rates$`2018 Rate` <- ((Comp_retention_2018/Comp_members_2017) * 100)
Comp_rates$`2019 Rate` <- ((Comp_retention_2019/Comp_members_2018) * 100)
Comp_rates$`2020 Rate` <- ((Comp_retention_2020/Comp_members_2019) * 100)
Comp_rates$`2021 Rate` <- ((Comp_retention_2021/Comp_members_2020) * 100)
######################################################
#Bundle Rate
Bundle_members_2016 <- sum(Total_yearly$`2016` == 4)
Bundle_members_2017 <- sum(Total_yearly$`2017` == 4)
Bundle_members_2018 <- sum(Total_yearly$`2018` == 4)
Bundle_members_2019 <- sum(Total_yearly$`2019` == 4)
Bundle_members_2020 <- sum(Total_yearly$`2020` == 4)
Bundle_members_2021 <- sum(Total_yearly$`2021` == 4)
Bundle_retention_2017 <- sum(Total_yearly$`2016` == 4 & Total_yearly$`2017` > 0)
Bundle_retention_2018 <- sum(Total_yearly$`2017` == 4 & Total_yearly$`2018` > 0)
Bundle_retention_2019 <- sum(Total_yearly$`2018` == 4 & Total_yearly$`2019` > 0)
Bundle_retention_2020 <- sum(Total_yearly$`2019` == 4 & Total_yearly$`2020` > 0)
Bundle_retention_2021 <- sum(Total_yearly$`2020` == 4 & Total_yearly$`2021` > 0)
Bundle_rates <- as.data.table(((Bundle_retention_2017/Bundle_members_2016) * 100))
colnames(Bundle_rates) <- "2017 Rate"
Bundle_rates$`2018 Rate` <- ((Bundle_retention_2018/Bundle_members_2017) * 100)
Bundle_rates$`2019 Rate` <- ((Bundle_retention_2019/Bundle_members_2018) * 100)
Bundle_rates$`2020 Rate` <- ((Bundle_retention_2020/Bundle_members_2019) * 100)
Bundle_rates$`2021 Rate` <- ((Bundle_retention_2021/Bundle_members_2020) * 100)
##################
#Final Rates Table
rates <- bind_rows(general_rates, Direct_rates, OTP_rates, Comp_rates, Bundle_rates)
View(rates)
rates <- bind_rows(general_rates, Direct_rates, OTP_rates, Comp_rates, Bundle_rates)
rownames(rates) <- c("General", "Direct", "OTP", "Comp", "Bundle")
View(rates)
rownames(rates) <- c("General", "Direct", "OTP", "Comp", "Bundle")
View(rates)
rates <- bind_rows(general_rates, Direct_rates, OTP_rates, Comp_rates, Bundle_rates)
rates <- as.data.frame(rates)
rownames(rates) <- c("General", "Direct", "OTP", "Comp", "Bundle")
View(rates)
crazy <- Total_yearly[Total_yearly$`2016` == 1 & Total_yearly$`2017` > 0]
View(direct)
View(crazy)
library(data.table)
library(dplyr)
View(rates)
View(Total_yearly)
data_4 <- data[data$`Unique ID` == "320160"]
View(data_4)
data_4 <- data[data$`Unique ID` == "305058"]
View(data_4)
data_4 <- data[data$`Unique ID` == "34049"]
View(data_4)
#read in our data
data <- fread('./UNH_Membership_Project/project/volume/data/raw/raw_data.csv')
###############CASE######################
data_2 <- data[data$`Order Id` == "Order 0170786"]
View(data_2)
students <- Final_Comp[Final_Comp$`Product: Product Name` == "Student"]
View(students)
View(Final_Comp)
what <- Total_yearly[Total_yearly$`2017` == 3 & Total_yearly$`2018` > 0]
View(what)
what <- Total_yearly[Total_yearly$`2017` == 3]
View(what)
Final_Direct <- fread('./UNH_Membership_Project/project/volume/data/processed/Final_Direct.csv')
Final_OTP <- fread('./UNH_Membership_Project/project/volume/data/processed/Final_OTP.csv')
Final_Comp <- fread('./UNH_Membership_Project/project/volume/data/processed/Final_Comp.csv')
Final_Bundle <- fread('./UNH_Membership_Project/project/volume/data/processed/Final_Bundle.csv')
Final_Direct$num <- 1
Final_OTP$num <- 2
Final_Comp$num <- 3
Final_Bundle$num <- 4
#Adding year of transaction to Final_Direct
Final_Direct$year[Final_Direct$`Transaction Date` >= as.Date('2016-01-01') & Final_Direct$`Transaction Date` <= as.Date('2016-12-31')] <- "2016"
Final_Direct$year[Final_Direct$`Transaction Date` >= as.Date('2017-01-01') & Final_Direct$`Transaction Date` <= as.Date('2017-12-31')] <- "2017"
Final_Direct$year[Final_Direct$`Transaction Date` >= as.Date('2018-01-01') & Final_Direct$`Transaction Date` <= as.Date('2018-12-31')] <- "2018"
Final_Direct$year[Final_Direct$`Transaction Date` >= as.Date('2019-01-01') & Final_Direct$`Transaction Date` <= as.Date('2019-12-31')] <- "2019"
Final_Direct$year[Final_Direct$`Transaction Date` >= as.Date('2020-01-01') & Final_Direct$`Transaction Date` <= as.Date('2020-12-31')] <- "2020"
Final_Direct$year[Final_Direct$`Transaction Date` >= as.Date('2021-01-01') & Final_Direct$`Transaction Date` <= as.Date('2021-12-31')] <- "2021"
#Adding year of transaction to Final_OTP
Final_OTP$year[Final_OTP$`Transaction Date` >= as.Date('2016-01-01') & Final_OTP$`Transaction Date` <= as.Date('2016-12-31')] <- "2016"
Final_OTP$year[Final_OTP$`Transaction Date` >= as.Date('2017-01-01') & Final_OTP$`Transaction Date` <= as.Date('2017-12-31')] <- "2017"
Final_OTP$year[Final_OTP$`Transaction Date` >= as.Date('2018-01-01') & Final_OTP$`Transaction Date` <= as.Date('2018-12-31')] <- "2018"
Final_OTP$year[Final_OTP$`Transaction Date` >= as.Date('2019-01-01') & Final_OTP$`Transaction Date` <= as.Date('2019-12-31')] <- "2019"
Final_OTP$year[Final_OTP$`Transaction Date` >= as.Date('2020-01-01') & Final_OTP$`Transaction Date` <= as.Date('2020-12-31')] <- "2020"
Final_OTP$year[Final_OTP$`Transaction Date` >= as.Date('2021-01-01') & Final_OTP$`Transaction Date` <= as.Date('2021-12-31')] <- "2021"
#Adding year of transaction to Final_Comp
Final_Comp$year[Final_Comp$`Transaction Date` >= as.Date('2016-01-01') & Final_Comp$`Transaction Date` <= as.Date('2016-12-31')] <- "2016"
Final_Comp$year[Final_Comp$`Transaction Date` >= as.Date('2017-01-01') & Final_Comp$`Transaction Date` <= as.Date('2017-12-31')] <- "2017"
Final_Comp$year[Final_Comp$`Transaction Date` >= as.Date('2018-01-01') & Final_Comp$`Transaction Date` <= as.Date('2018-12-31')] <- "2018"
Final_Comp$year[Final_Comp$`Transaction Date` >= as.Date('2019-01-01') & Final_Comp$`Transaction Date` <= as.Date('2019-12-31')] <- "2019"
Final_Comp$year[Final_Comp$`Transaction Date` >= as.Date('2020-01-01') & Final_Comp$`Transaction Date` <= as.Date('2020-12-31')] <- "2020"
Final_Comp$year[Final_Comp$`Transaction Date` >= as.Date('2021-01-01') & Final_Comp$`Transaction Date` <= as.Date('2021-12-31')] <- "2021"
#Adding year of transaction to Final_Bundle
Final_Bundle$year[Final_Bundle$`Transaction Date` >= as.Date('2016-01-01') & Final_Bundle$`Transaction Date` <= as.Date('2016-12-31')] <- "2016"
Final_Bundle$year[Final_Bundle$`Transaction Date` >= as.Date('2017-01-01') & Final_Bundle$`Transaction Date` <= as.Date('2017-12-31')] <- "2017"
Final_Bundle$year[Final_Bundle$`Transaction Date` >= as.Date('2018-01-01') & Final_Bundle$`Transaction Date` <= as.Date('2018-12-31')] <- "2018"
Final_Bundle$year[Final_Bundle$`Transaction Date` >= as.Date('2019-01-01') & Final_Bundle$`Transaction Date` <= as.Date('2019-12-31')] <- "2019"
Final_Bundle$year[Final_Bundle$`Transaction Date` >= as.Date('2020-01-01') & Final_Bundle$`Transaction Date` <= as.Date('2020-12-31')] <- "2020"
Final_Bundle$year[Final_Bundle$`Transaction Date` >= as.Date('2021-01-01') & Final_Bundle$`Transaction Date` <= as.Date('2021-12-31')] <- "2021"
merged <- bind_rows(Final_Direct, Final_OTP, Final_Comp, Final_Bundle)
setorder(merged, cols = `Order Id`)
merged <- as.data.frame(merged)
merged <- merged[!duplicated(merged[c('Unique ID', 'year')]),]
merged <- as.data.table(merged)
merged$year<- as.numeric(merged$year)
#Separate table back into Direct, OTP, Comp, or Bundle
Final_Direct <- merged[merged$num == 1]
Final_OTP <- merged[merged$num == 2]
Final_Comp <- merged[merged$num == 3]
Final_Bundle <- merged[merged$num == 4]
Final_Direct <- Final_Direct[, 'num':=NULL]
Final_OTP <- Final_OTP[, 'num':=NULL]
Final_Comp <- Final_Comp[, 'num':=NULL]
Final_Bundle <- Final_Bundle[, 'num':=NULL]
###########
#OTP Yearly
OTP_yearly = dcast(Final_OTP, `Unique ID` ~ year)
View(OTP_yearly)
############
#Comp Yearly
Comp_yearly = dcast(Final_Comp, `Unique ID` ~ year)
View(Comp_yearly)
Comp_yearly[Comp_yearly$`2018` == "2018"]
sum(Comp_yearly$`2018` == "2018")
num <- sum(Comp_yearly$`2018` == "2018")
############
#Comp Yearly
Comp_yearly = dcast(Final_Comp, `Unique ID` ~ year)
Comp_yearly <- Comp_yearly[,"NA":=NULL]
for(j in 2:ncol(Comp_yearly)){
set(Comp_yearly, i= which(Comp_yearly[[j]]!=0), j=j, value =3)
}
############
#Comp Yearly
Comp_yearly = dcast(Final_Comp, `Unique ID` ~ year)
Comp_yearly <- Comp_yearly[,"NA":=NULL]
for(j in 2:ncol(Comp_yearly)){
set(Comp_yearly, i= which(Comp_yearly[[j]]!=0), j=j, value =3)
}
Comp_yearly[is.na(Comp_yearly)] <- 0
sum(Comp_yearly$`2018` == 3)
View(Total_yearly)
View(rates)
